version: "3.9"

services:
  # Backend Django
  backend:
    build: ./multibpo_backend
    container_name: multibpo_backend
    ports:
      - "0.0.0.0:8010:8000"
    volumes:
      - ./multibpo_backend:/app
      - multibpo_static_volume:/app/staticfiles
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy  # ← Mantém: aguarda DB estar pronto
    networks:
      - multibpo_network
    restart: unless-stopped

  # Frontend Astro
  frontend:
    build: ./multibpo_frontend
    container_name: multibpo_frontend
    ports:
      - "0.0.0.0:8011:3000"
    volumes:
      - ./multibpo_frontend:/app
      - /app/node_modules
    env_file:
      - .env
    networks:
      - multibpo_network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: multibpo_db
    ports:
      - "127.0.0.1:8012:5432"
    env_file:
      - .env
    volumes:
      - multibpo_db_volume:/var/lib/postgresql/data
      - ./infrastructure/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - multibpo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-multibpo} -d ${DATABASE_NAME:-multibpo_db}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Proxy
  nginx:
    image: nginx:latest
    container_name: multibpo_nginx
    ports:
      - "0.0.0.0:8082:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - multibpo_static_volume:/app/staticfiles
      - multibpo_nginx_logs:/var/log/nginx
    depends_on:
      - backend    # ← VOLTA: dependência simples (sem health check)
      - frontend   # ← VOLTA: dependência simples (sem health check)
    networks:
      - multibpo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ========== NOVO: Frontend MVP Astro ==========
  mvp-frontend:
    build: ./multibpo_mvp_frontend
    container_name: multibpo_mvp_frontend
    ports:
      - "0.0.0.0:8013:3000"
    volumes:
      - ./multibpo_mvp_frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - ASTRO_HOST=0.0.0.0
      - ASTRO_PORT=3000
      - API_BASE_URL=http://192.168.1.4:8082/api/v1/mvp
    depends_on:
      - backend
    networks:
      - multibpo_network
    restart: unless-stopped

volumes:
  multibpo_db_volume:
    driver: local
  multibpo_static_volume:
    driver: local
  multibpo_nginx_logs:
    driver: local

networks:
  multibpo_network:
    driver: bridge