---
// ==========================================================================
// MultiBPO MVP Frontend - P√°gina de Login v3 Aprimorada
// Mini-Fase MVP 3 - Integra√ß√£o completa com novos sistemas
// 
// Login com valida√ß√µes em tempo real, error handling robusto,
// loading states e integra√ß√£o com notification_system
// ==========================================================================

import Layout from '../layouts/layout_principal.astro';

// Meta dados da p√°gina
const pageTitle = "Login MVP v3";
const pageDescription = "Fa√ßa login no MultiBPO MVP - Sistema aprimorado com valida√ß√µes em tempo real";
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  showHeader={true}
  showFooter={true}
  requireAuth={false}
>
  <!-- =================================================================== -->
  <!-- CONTAINER PRINCIPAL -->
  <!-- =================================================================== -->
  <div class="min-h-screen bg-gradient-multibpo flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    
    <!-- ================================================================= -->
    <!-- CARD DE LOGIN APRIMORADO -->
    <!-- ================================================================= -->
    <div class="max-w-form w-full bg-white rounded-multibpo shadow-multibpo p-8 animate-fade-in">
      
      <!-- Header do Card -->
      <div class="text-center mb-8">
        <div class="mx-auto w-16 h-16 bg-gradient-multibpo rounded-multibpo flex items-center justify-center mb-4">
          <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
          </svg>
        </div>
        <h1 class="text-header-lg font-bold text-contabil-azul mb-2">
          Login MVP v3
        </h1>
        <p class="text-contabil-texto">
          Entre na sua conta MultiBPO com sistema aprimorado
        </p>
        
        <!-- Badge de vers√£o -->
        <div class="mt-3">
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
            üöÄ Sistema Aprimorado
          </span>
        </div>
      </div>

      <!-- ================================================================= -->
      <!-- FORMUL√ÅRIO DE LOGIN APRIMORADO -->
      <!-- ================================================================= -->
      <form id="form-login-v3" class="space-y-6" novalidate>
        
        <!-- Email com Valida√ß√£o Real-time -->
        <div>
          <label for="email" class="block text-sm font-medium text-contabil-azul mb-2">
            Email *
          </label>
          <div class="relative">
            <input
              type="email"
              id="email"
              name="email"
              required
              autocomplete="email"
              class="form-input w-full px-4 py-3 pr-10 border border-gray-300 rounded-input focus:ring-2 focus:ring-azul-secundario focus:border-transparent transition-all duration-200"
              placeholder="seu@email.com"
              data-validation="email"
            />
            <!-- √çcone de valida√ß√£o -->
            <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
              <div id="email-validation-icon" class="hidden">
                <!-- Ser√° preenchido via JavaScript -->
              </div>
            </div>
          </div>
          <!-- Container para mensagens de erro/sucesso -->
          <div id="email-feedback" class="mt-1 text-sm hidden"></div>
        </div>

        <!-- Senha com Toggle e Valida√ß√£o -->
        <div>
          <label for="password" class="block text-sm font-medium text-contabil-azul mb-2">
            Senha *
          </label>
          <div class="relative">
            <input
              type="password"
              id="password"
              name="password"
              required
              autocomplete="current-password"
              class="form-input w-full px-4 py-3 pr-20 border border-gray-300 rounded-input focus:ring-2 focus:ring-azul-secundario focus:border-transparent transition-all duration-200"
              placeholder="Sua senha"
              data-validation="password"
            />
            <!-- Bot√µes lado direito -->
            <div class="absolute inset-y-0 right-0 flex items-center">
              <!-- √çcone de valida√ß√£o -->
              <div id="password-validation-icon" class="hidden mr-2">
                <!-- Ser√° preenchido via JavaScript -->
              </div>
              <!-- Toggle de visibilidade -->
              <button
                type="button"
                id="toggle-password"
                class="pr-3 flex items-center text-gray-400 hover:text-contabil-azul transition-colors duration-200 focus:outline-none focus:text-contabil-azul"
                tabindex="-1"
                aria-label="Mostrar/ocultar senha"
              >
                <svg id="eye-closed" class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21" />
                </svg>
                <svg id="eye-open" class="h-5 w-5 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                </svg>
              </button>
            </div>
          </div>
          <!-- Container para mensagens de erro/sucesso -->
          <div id="password-feedback" class="mt-1 text-sm hidden"></div>
        </div>

        <!-- Lembrar-me e Esqueci a senha -->
        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input
              id="remember-me"
              name="remember-me"
              type="checkbox"
              class="h-4 w-4 text-azul-secundario focus:ring-azul-secundario border-gray-300 rounded transition-colors duration-200"
            />
            <label for="remember-me" class="ml-2 block text-sm text-contabil-texto">
              Lembrar-me por 7 dias
            </label>
          </div>

          <div class="text-sm">
            <a 
              href="#" 
              class="text-contabil-azul hover:text-azul-secundario font-medium transition-colors duration-200 focus:outline-none focus:underline"
              onclick="showRecoveryInfo()"
            >
              Esqueceu a senha?
            </a>
          </div>
        </div>

        <!-- =============================================================== -->
        <!-- INDICADOR DE STATUS DO FORMUL√ÅRIO -->
        <!-- =============================================================== -->
        <div id="form-status" class="hidden">
          <div class="bg-blue-50 border border-blue-200 rounded-lg p-3">
            <div class="flex items-center">
              <svg class="w-5 h-5 text-blue-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <span id="form-status-message" class="text-sm text-blue-800"></span>
            </div>
          </div>
        </div>

        <!-- =============================================================== -->
        <!-- BOT√ÉO DE LOGIN APRIMORADO -->
        <!-- =============================================================== -->
        <div>
          <button
            type="submit"
            id="btn-login-v3"
            class="w-full bg-gradient-multibpo text-white font-semibold py-3 px-4 rounded-button hover:shadow-button focus:outline-none focus:ring-2 focus:ring-azul-secundario focus:ring-offset-2 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
            disabled
          >
            <span id="btn-text" class="flex items-center justify-center">
              <svg id="btn-icon-normal" class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1" />
              </svg>
              Entrar no Sistema
            </span>
            <span id="btn-loading" class="hidden flex items-center justify-center">
              <svg class="animate-spin h-5 w-5 mr-2" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none"/>
                <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"/>
              </svg>
              <span id="loading-text">Autenticando...</span>
            </span>
          </button>
        </div>

        <!-- =============================================================== -->
        <!-- LINK PARA CADASTRO -->
        <!-- =============================================================== -->
        <div class="text-center">
          <p class="text-contabil-texto">
            N√£o tem uma conta? 
            <a 
              href="/cadastro" 
              class="text-contabil-azul hover:text-azul-secundario font-medium transition-colors duration-200 focus:outline-none focus:underline"
            >
              Criar conta gr√°tis
            </a>
          </p>
        </div>

        <!-- =============================================================== -->
        <!-- INFORMA√á√ïES DO SISTEMA APRIMORADAS -->
        <!-- =============================================================== -->
        <div class="mt-8 pt-6 border-t border-gray-200">
          <div class="text-center">
            <p class="text-xs text-gray-500 mb-2">MultiBPO MVP v3 - Sistema Cont√°bil Aprimorado</p>
            <div class="flex justify-center space-x-4 text-xs text-gray-400">
              <span class="flex items-center">
                <span class="w-2 h-2 bg-green-400 rounded-full mr-1"></span>
                Valida√ß√£o Real-time
              </span>
              <span class="flex items-center">
                <span class="w-2 h-2 bg-blue-400 rounded-full mr-1"></span>
                Error Handling
              </span>
              <span class="flex items-center">
                <span class="w-2 h-2 bg-purple-400 rounded-full mr-1"></span>
                Auto-Recovery
              </span>
            </div>
          </div>
        </div>
      </form>
    </div>

    <!-- ================================================================= -->
    <!-- CARD DE INFORMA√á√ïES SISTEMA (lado direito) -->
    <!-- ================================================================= -->
    <div class="hidden xl:block xl:ml-12 max-w-md">
      <div class="bg-white/10 backdrop-blur-sm rounded-multibpo p-6 text-white">
        <h3 class="text-lg font-semibold mb-4 flex items-center">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          Sistema v3 Ativo
        </h3>
        
        <div class="space-y-3 text-sm">
          <div class="flex items-center justify-between">
            <span class="flex items-center">
              <span class="w-2 h-2 bg-green-400 rounded-full mr-2"></span>
              Backend MVP
            </span>
            <span id="backend-status" class="text-green-300">Verificando...</span>
          </div>
          
          <div class="flex items-center justify-between">
            <span class="flex items-center">
              <span class="w-2 h-2 bg-blue-400 rounded-full mr-2"></span>
              Valida√ß√µes
            </span>
            <span class="text-blue-300">Ativas</span>
          </div>
          
          <div class="flex items-center justify-between">
            <span class="flex items-center">
              <span class="w-2 h-2 bg-purple-400 rounded-full mr-2"></span>
              Notifica√ß√µes
            </span>
            <span class="text-purple-300">Integradas</span>
          </div>
          
          <div class="flex items-center justify-between">
            <span class="flex items-center">
              <span class="w-2 h-2 bg-yellow-400 rounded-full mr-2"></span>
              Prote√ß√£o Rotas
            </span>
            <span class="text-yellow-300">Ativa</span>
          </div>
        </div>
        
        <div class="mt-6 p-4 bg-white/10 rounded-lg">
          <p class="text-xs opacity-90 mb-2">
            <strong>üîß Melhorias v3:</strong>
          </p>
          <ul class="text-xs space-y-1 opacity-80">
            <li>‚Ä¢ Valida√ß√£o em tempo real</li>
            <li>‚Ä¢ Error handling robusto</li>
            <li>‚Ä¢ Loading states inteligentes</li>
            <li>‚Ä¢ Auto-refresh de tokens</li>
            <li>‚Ä¢ Notifica√ß√µes toast</li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</Layout>

<!-- ===================================================================== -->
<!-- SCRIPTS DA P√ÅGINA V3 -->
<!-- ===================================================================== -->
<script>
  // Importar todos os novos sistemas
  import { apiClientV3 } from '../utils/api_client_v3.js';
  import { Validators } from '../utils/validators.js';
  import { showSuccess, showError, showWarning } from '../utils/notification_system.js';
  import { enforceRoute } from '../utils/route_protection.js';

  // Estado global da p√°gina
  let formState = {
    isValid: false,
    fieldsValid: {
      email: false,
      password: false
    },
    isSubmitting: false,
    hasAttemptedSubmit: false
  };

  // =====================================================================
  // INICIALIZA√á√ÉO DA P√ÅGINA
  // =====================================================================
  document.addEventListener('DOMContentLoaded', async function() {
    try {
      // Verificar prote√ß√£o de rota
      await enforceRoute({ preventRedirect: false });
      
      // Configurar valida√ß√µes em tempo real
      setupRealtimeValidations();
      
      // Configurar event listeners
      setupEventListeners();
      
      // Verificar URL params
      handleUrlParams();
      
      // Testar backend
      await checkBackendStatus();
      
      // Foco inicial no email
      document.getElementById('email')?.focus();
      
      console.log('[Login v3] P√°gina inicializada com sucesso');
      
    } catch (error) {
      console.error('[Login v3] Erro na inicializa√ß√£o:', error);
      showError('Erro ao carregar a p√°gina. Recarregue e tente novamente.');
    }
  });

  // =====================================================================
  // CONFIGURAR VALIDA√á√ïES EM TEMPO REAL
  // =====================================================================
  function setupRealtimeValidations() {
    try {
      // Configurar valida√ß√µes para formul√°rio de login
      Validators.setupLoginForm('form-login-v3');
      
      // Configurar listeners customizados para feedback visual
      setupCustomValidationFeedback();
      
      console.log('[Login v3] Valida√ß√µes configuradas');
      
    } catch (error) {
      console.error('[Login v3] Erro ao configurar valida√ß√µes:', error);
      // Fallback: usar valida√ß√µes b√°sicas HTML5
      setupBasicValidations();
    }
  }

  // =====================================================================
  // FEEDBACK VISUAL CUSTOMIZADO
  // =====================================================================
  function setupCustomValidationFeedback() {
    const emailField = document.getElementById('email');
    const passwordField = document.getElementById('password');

    // Listeners para email
    emailField.addEventListener('input', () => updateFieldValidation('email'));
    emailField.addEventListener('blur', () => updateFieldValidation('email'));

    // Listeners para senha
    passwordField.addEventListener('input', () => updateFieldValidation('password'));
    passwordField.addEventListener('blur', () => updateFieldValidation('password'));
  }

  // =====================================================================
  // ATUALIZAR VALIDA√á√ÉO DE CAMPO
  // =====================================================================
  function updateFieldValidation(fieldName) {
    const field = document.getElementById(fieldName);
    const value = field.value.trim();
    let isValid = false;

    // Valida√ß√£o espec√≠fica por campo
    switch (fieldName) {
      case 'email':
        isValid = value && /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value);
        break;
      case 'password':
        isValid = value.length > 0;
        break;
    }

    // Atualizar estado
    formState.fieldsValid[fieldName] = isValid;
    
    // Atualizar UI
    updateFieldUI(fieldName, isValid, value);
    
    // Atualizar bot√£o
    updateSubmitButton();
  }

  // =====================================================================
  // ATUALIZAR UI DO CAMPO
  // =====================================================================
  function updateFieldUI(fieldName, isValid, value) {
    const field = document.getElementById(fieldName);
    const iconContainer = document.getElementById(`${fieldName}-validation-icon`);
    const feedbackContainer = document.getElementById(`${fieldName}-feedback`);

    // Limpar estados anteriores
    field.classList.remove('border-green-500', 'border-red-500', 'focus:ring-green-500', 'focus:ring-red-500');
    iconContainer.classList.add('hidden');
    feedbackContainer.classList.add('hidden');

    if (value.length > 0) {
      if (isValid) {
        // Estado v√°lido
        field.classList.add('border-green-500', 'focus:ring-green-500');
        iconContainer.innerHTML = `
          <svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
        `;
        iconContainer.classList.remove('hidden');
        
        // Feedback positivo
        feedbackContainer.className = 'mt-1 text-sm text-green-600';
        feedbackContainer.textContent = fieldName === 'email' ? 'Email v√°lido' : 'Senha preenchida';
        feedbackContainer.classList.remove('hidden');
      } else {
        // Estado inv√°lido
        field.classList.add('border-red-500', 'focus:ring-red-500');
        iconContainer.innerHTML = `
          <svg class="w-5 h-5 text-red-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
          </svg>
        `;
        iconContainer.classList.remove('hidden');
        
        // Feedback negativo
        feedbackContainer.className = 'mt-1 text-sm text-red-600';
        feedbackContainer.textContent = fieldName === 'email' ? 'Email inv√°lido' : 'Senha obrigat√≥ria';
        feedbackContainer.classList.remove('hidden');
      }
    } else {
      // Estado neutro (sem valor)
      field.classList.add('border-gray-300');
    }
  }

  // =====================================================================
  // ATUALIZAR BOT√ÉO DE SUBMIT
  // =====================================================================
  function updateSubmitButton() {
    const btn = document.getElementById('btn-login-v3');
    const allValid = Object.values(formState.fieldsValid).every(valid => valid);
    
    formState.isValid = allValid;
    
    if (allValid && !formState.isSubmitting) {
      btn.disabled = false;
      btn.classList.remove('opacity-50', 'cursor-not-allowed');
      btn.classList.add('hover:shadow-button', 'transform', 'hover:scale-105');
    } else {
      btn.disabled = true;
      btn.classList.add('opacity-50', 'cursor-not-allowed');
      btn.classList.remove('hover:shadow-button', 'transform', 'hover:scale-105');
    }
  }

  // =====================================================================
  // CONFIGURAR EVENT LISTENERS
  // =====================================================================
  function setupEventListeners() {
    // Toggle password visibility
    setupPasswordToggle();
    
    // Form submission
    document.getElementById('form-login-v3').addEventListener('submit', handleFormSubmit);
    
    // Keyboard shortcuts
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Enter' && formState.isValid && !formState.isSubmitting) {
        e.preventDefault();
        document.getElementById('btn-login-v3').click();
      }
    });
  }

  // =====================================================================
  // SETUP PASSWORD TOGGLE
  // =====================================================================
  function setupPasswordToggle() {
    const toggleBtn = document.getElementById('toggle-password');
    const passwordField = document.getElementById('password');
    const eyeClosed = document.getElementById('eye-closed');
    const eyeOpen = document.getElementById('eye-open');

    toggleBtn?.addEventListener('click', function() {
      if (passwordField.type === 'password') {
        passwordField.type = 'text';
        eyeClosed.classList.add('hidden');
        eyeOpen.classList.remove('hidden');
        toggleBtn.setAttribute('aria-label', 'Ocultar senha');
      } else {
        passwordField.type = 'password';
        eyeClosed.classList.remove('hidden');
        eyeOpen.classList.add('hidden');
        toggleBtn.setAttribute('aria-label', 'Mostrar senha');
      }
    });
  }

  // =====================================================================
  // SUBMISS√ÉO DO FORMUL√ÅRIO
  // =====================================================================
  async function handleFormSubmit(e) {
    e.preventDefault();
    
    if (formState.isSubmitting || !formState.isValid) {
      return;
    }
    
    formState.isSubmitting = true;
    formState.hasAttemptedSubmit = true;
    
    // Atualizar UI de loading
    setLoadingState(true);
    
    try {
      const formData = new FormData(e.target);
      const loginData = {
        email: formData.get('email').trim(),
        password: formData.get('password')
      };
      
      // Chamar API v3 com contexto espec√≠fico
      const response = await apiClientV3.login(loginData, {
        context: 'login_page_v3',
        loadingMessage: 'Autenticando no sistema...',
        showSuccessNotification: false  // Vamos mostrar customizado
      });
      
      if (response.success) {
        // Salvar dados de autentica√ß√£o
        apiClientV3.saveAuth({
          tokens: response.tokens,
          user: response.user
        });
        
        // Verificar remember me
        if (formData.get('remember-me')) {
          localStorage.setItem('multibpo_remember', 'true');
        }
        
        // Mostrar sucesso customizado
        showSuccess(`Bem-vindo de volta, ${response.user.nome_completo}! Redirecionando...`, {
          duration: 3000,
          title: 'Login Realizado'
        });
        
        // Atualizar bot√£o com sucesso
        updateButtonSuccess();
        
        // Redirecionar ap√≥s delay
        setTimeout(() => {
          window.location.href = '/dashboard';
        }, 2000);
        
      } else {
        // Erro na resposta
        throw new Error(response.message || 'Erro na autentica√ß√£o');
      }
      
    } catch (error) {
      console.error('[Login v3] Erro no login:', error);
      
      // Error handling j√° √© feito pelo apiClientV3, mas podemos customizar
      if (error.type === 'validation') {
        // Errors de valida√ß√£o espec√≠ficos
        highlightFieldErrors(error.fieldErrors);
      } else if (error.httpStatus === 401) {
        // Credenciais incorretas
        showFormError('Email ou senha incorretos. Verifique seus dados e tente novamente.');
      } else {
        // Outros erros
        showFormError('Erro ao fazer login. Tente novamente em alguns instantes.');
      }
      
    } finally {
      formState.isSubmitting = false;
      setLoadingState(false);
    }
  }

  // =====================================================================
  // ESTADOS DE LOADING
  // =====================================================================
  function setLoadingState(loading) {
    const btn = document.getElementById('btn-login-v3');
    const btnText = document.getElementById('btn-text');
    const btnLoading = document.getElementById('btn-loading');
    const form = document.getElementById('form-login-v3');
    
    if (loading) {
      btn.disabled = true;
      btnText.classList.add('hidden');
      btnLoading.classList.remove('hidden');
      form.classList.add('pointer-events-none', 'opacity-75');
      
      // Atualizar texto de loading progressivamente
      updateLoadingText();
    } else {
      btn.disabled = !formState.isValid;
      btnText.classList.remove('hidden');
      btnLoading.classList.add('hidden');
      form.classList.remove('pointer-events-none', 'opacity-75');
    }
  }

  // =====================================================================
  // ATUALIZAR TEXTO DE LOADING
  // =====================================================================
  function updateLoadingText() {
    const loadingTextEl = document.getElementById('loading-text');
    const messages = ['Autenticando...', 'Verificando dados...', 'Preparando dashboard...'];
    let index = 0;
    
    const interval = setInterval(() => {
      if (!formState.isSubmitting) {
        clearInterval(interval);
        return;
      }
      
      loadingTextEl.textContent = messages[index];
      index = (index + 1) % messages.length;
    }, 1500);
  }

  // =====================================================================
  // BOT√ÉO DE SUCESSO
  // =====================================================================
  function updateButtonSuccess() {
    const btn = document.getElementById('btn-login-v3');
    const btnText = document.getElementById('btn-text');
    const btnLoading = document.getElementById('btn-loading');
    
    btn.classList.remove('bg-gradient-multibpo');
    btn.classList.add('bg-green-600');
    
    btnText.innerHTML = `
      <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
      </svg>
      Login Realizado!
    `;
    
    btnText.classList.remove('hidden');
    btnLoading.classList.add('hidden');
  }

  // =====================================================================
  // MOSTRAR ERRO NO FORMUL√ÅRIO
  // =====================================================================
  function showFormError(message) {
    const statusContainer = document.getElementById('form-status');
    const statusMessage = document.getElementById('form-status-message');
    
    statusContainer.className = 'bg-red-50 border border-red-200 rounded-lg p-3';
    statusMessage.className = 'text-sm text-red-800';
    statusMessage.textContent = message;
    statusContainer.classList.remove('hidden');
    
    // Auto-hide ap√≥s 5 segundos
    setTimeout(() => {
      statusContainer.classList.add('hidden');
    }, 5000);
  }

  // =====================================================================
  // DESTACAR ERROS DE CAMPO
  // =====================================================================
  function highlightFieldErrors(fieldErrors) {
    Object.entries(fieldErrors).forEach(([fieldName, messages]) => {
      const field = document.getElementById(fieldName);
      if (field) {
        field.classList.add('border-red-500', 'focus:ring-red-500');
        field.classList.remove('border-gray-300', 'border-green-500');
        
        const feedbackContainer = document.getElementById(`${fieldName}-feedback`);
        if (feedbackContainer) {
          feedbackContainer.className = 'mt-1 text-sm text-red-600';
          feedbackContainer.textContent = Array.isArray(messages) ? messages[0] : messages;
          feedbackContainer.classList.remove('hidden');
        }
      }
    });
  }

  // =====================================================================
  // VALIDA√á√ïES B√ÅSICAS (FALLBACK)
  // =====================================================================
  function setupBasicValidations() {
    const emailField = document.getElementById('email');
    const passwordField = document.getElementById('password');
    
    [emailField, passwordField].forEach(field => {
      field.addEventListener('input', () => {
        updateFieldValidation(field.id);
      });
    });
  }

  // =====================================================================
  // HANDLE URL PARAMS
  // =====================================================================
  function handleUrlParams() {
    const urlParams = new URLSearchParams(window.location.search);
    
    if (urlParams.get('registered') === 'true') {
      showSuccess('Conta criada com sucesso! Fa√ßa login para continuar.', {
        duration: 5000,
        title: 'Cadastro Conclu√≠do'
      });
    }
    
    if (urlParams.get('expired') === 'true') {
      showWarning('Sua sess√£o expirou. Fa√ßa login novamente.', {
        duration: 4000,
        title: 'Sess√£o Expirada'
      });
    }
    
    if (urlParams.get('logout') === 'true') {
      showSuccess('Logout realizado com sucesso!', {
        duration: 3000,
        title: 'At√© logo'
      });
    }
  }

  // =====================================================================
  // VERIFICAR STATUS DO BACKEND
  // =====================================================================
  async function checkBackendStatus() {
    try {
      const backendStatusEl = document.getElementById('backend-status');
      
      if (backendStatusEl) {
        backendStatusEl.textContent = 'Verificando...';
        backendStatusEl.className = 'text-yellow-300';
      }
      
      // Teste r√°pido do backend
      await apiClientV3.testBackend({
        showLoading: false,
        context: 'backend_health_check'
      });
      
      if (backendStatusEl) {
        backendStatusEl.textContent = 'Online';
        backendStatusEl.className = 'text-green-300';
      }
      
    } catch (error) {
      console.warn('[Login v3] Backend check falhou:', error);
      
      const backendStatusEl = document.getElementById('backend-status');
      if (backendStatusEl) {
        backendStatusEl.textContent = 'Offline';
        backendStatusEl.className = 'text-red-300';
      }
      
      // Mostrar aviso discreto
      showWarning('Sistema em manuten√ß√£o. Algumas funcionalidades podem estar indispon√≠veis.', {
        duration: 4000
      });
    }
  }

  // =====================================================================
  // FUN√á√ÉO GLOBAL PARA RECUPERA√á√ÉO DE SENHA
  // =====================================================================
  window.showRecoveryInfo = function() {
    showWarning('Funcionalidade de recupera√ß√£o de senha ser√° implementada na pr√≥xima vers√£o. Entre em contato com o suporte se necess√°rio.', {
      duration: 6000,
      title: 'Em Desenvolvimento'
    });
  };

  // =====================================================================
  // CLEANUP AO SAIR DA P√ÅGINA
  // =====================================================================
  window.addEventListener('beforeunload', () => {
    // Cancelar requisi√ß√µes ativas se houver
    if (window.apiClientV3) {
      apiClientV3.cancelActiveRequests();
    }
  });

  // =====================================================================
  // FUNCIONALIDADE DE AUTO-FILL PARA DESENVOLVIMENTO
  // =====================================================================
  if (window.location.hostname === '192.168.1.4' || window.location.hostname === 'localhost') {
    // Adicionar bot√£o de auto-fill para testes
    setTimeout(() => {
      const form = document.getElementById('form-login-v3');
      
      const autoFillBtn = document.createElement('button');
      autoFillBtn.type = 'button';
      autoFillBtn.className = 'text-xs text-gray-400 hover:text-gray-600 mt-2';
      autoFillBtn.textContent = 'üß™ Auto-fill para teste';
      autoFillBtn.onclick = () => {
        document.getElementById('email').value = 'maria@teste.com';
        document.getElementById('password').value = 'senha123';
        
        // Trigger valida√ß√µes
        updateFieldValidation('email');
        updateFieldValidation('password');
        
        showSuccess('Dados de teste preenchidos!', { duration: 2000 });
      };
      
      form.appendChild(autoFillBtn);
    }, 1000);
  }
</script>

<!-- ===================================================================== -->
<!-- MELHORIAS IMPLEMENTADAS NA V3:

1. VALIDA√á√ÉO EM TEMPO REAL:
   - Feedback visual imediato (verde/vermelho)
   - √çcones de valida√ß√£o din√¢micos
   - Mensagens espec√≠ficas por campo
   - Bot√£o habilitado apenas quando v√°lido

2. ERROR HANDLING ROBUSTO:
   - Integra√ß√£o com ErrorHandler
   - Diferentes tipos de erro tratados
   - Fallback para casos extremos
   - Feedback contextual

3. LOADING STATES INTELIGENTES:
   - Dura√ß√£o m√≠nima para evitar flash
   - Texto progressivo durante opera√ß√£o
   - Estado de sucesso visual
   - Blocking adequado da UI

4. INTEGRA√á√ÉO COMPLETA:
   - apiClientV3 para requests otimizados
   - notification_system para feedback
   - route_protection para seguran√ßa
   - validators para valida√ß√£o real-time

5. UX APRIMORADA:
   - Verifica√ß√£o de backend status
   - URL params para contexto
   - Remember me funcional
   - Auto-fill para desenvolvimento
   - Keyboard shortcuts

6. RESPONSIVE E ACESS√çVEL:
   - Aria labels adequados
   - Navega√ß√£o por teclado
   - Contraste de cores apropriado
   - Feedback para screen readers
===================================================================== -->