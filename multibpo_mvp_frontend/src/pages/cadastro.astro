---
// ==========================================================================
// MultiBPO MVP Frontend - Página de Cadastro
// Mini-Fase MVP 2 - Frontend básico
// 
// Formulário de registro integrado com backend MVP
// Validações brasileiras e feedback visual
// ==========================================================================

import Layout from '../layouts/layout_principal.astro';

// Meta dados da página
const pageTitle = "Cadastrar";
const pageDescription = "Crie sua conta no MultiBPO MVP - Plataforma BPO para escritórios contábeis";
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  showHeader={true}
  showFooter={true}
  requireAuth={false}
>
  <!-- =================================================================== -->
  <!-- CONTAINER PRINCIPAL -->
  <!-- =================================================================== -->
  <div class="min-h-screen bg-gradient-multibpo flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    
    <!-- ================================================================= -->
    <!-- CARD DE CADASTRO -->
    <!-- ================================================================= -->
    <div class="max-w-form w-full bg-white rounded-multibpo shadow-multibpo p-8 animate-fade-in">
      
      <!-- Header do Card -->
      <div class="text-center mb-8">
        <div class="mx-auto w-16 h-16 bg-gradient-multibpo rounded-multibpo flex items-center justify-center mb-4">
          <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z" />
          </svg>
        </div>
        <h1 class="text-header-lg font-bold text-contabil-azul mb-2">
          Criar Conta MVP
        </h1>
        <p class="text-contabil-texto">
          Cadastre-se para acessar a plataforma MultiBPO MVP
        </p>
      </div>

      <!-- ================================================================= -->
      <!-- FORMULÁRIO DE CADASTRO -->
      <!-- ================================================================= -->
      <form id="form-cadastro" class="space-y-6">
        
        <!-- Campos Nome -->
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
          <div>
            <label for="first_name" class="block text-sm font-medium text-contabil-azul mb-2">
              Primeiro Nome *
            </label>
            <input
              type="text"
              id="first_name"
              name="first_name"
              required
              maxlength="30"
              class="form-input w-full px-4 py-3 border border-gray-300 rounded-input focus:ring-2 focus:ring-azul-secundario focus:border-transparent transition-all duration-200"
              placeholder="João"
            />
            <div class="error-message hidden text-contabil-erro text-sm mt-1"></div>
          </div>

          <div>
            <label for="last_name" class="block text-sm font-medium text-contabil-azul mb-2">
              Sobrenome *
            </label>
            <input
              type="text"
              id="last_name"
              name="last_name"
              required
              maxlength="150"
              class="form-input w-full px-4 py-3 border border-gray-300 rounded-input focus:ring-2 focus:ring-azul-secundario focus:border-transparent transition-all duration-200"
              placeholder="Silva"
            />
            <div class="error-message hidden text-contabil-erro text-sm mt-1"></div>
          </div>
        </div>

        <!-- Email -->
        <div>
          <label for="email" class="block text-sm font-medium text-contabil-azul mb-2">
            Email *
          </label>
          <input
            type="email"
            id="email"
            name="email"
            required
            class="form-input w-full px-4 py-3 border border-gray-300 rounded-input focus:ring-2 focus:ring-azul-secundario focus:border-transparent transition-all duration-200"
            placeholder="joao@exemplo.com"
          />
          <div class="error-message hidden text-contabil-erro text-sm mt-1"></div>
        </div>

        <!-- CPF -->
        <div>
          <label for="cpf" class="block text-sm font-medium text-contabil-azul mb-2">
            CPF *
          </label>
          <input
            type="text"
            id="cpf"
            name="cpf"
            required
            maxlength="14"
            class="form-input w-full px-4 py-3 border border-gray-300 rounded-input focus:ring-2 focus:ring-azul-secundario focus:border-transparent transition-all duration-200"
            placeholder="000.000.000-00"
          />
          <div class="error-message hidden text-contabil-erro text-sm mt-1"></div>
          <p class="text-xs text-gray-500 mt-1">Digite apenas números, a formatação é automática</p>
        </div>

        <!-- Telefone -->
        <div>
          <label for="telefone" class="block text-sm font-medium text-contabil-azul mb-2">
            Telefone
          </label>
          <input
            type="tel"
            id="telefone"
            name="telefone"
            maxlength="20"
            class="form-input w-full px-4 py-3 border border-gray-300 rounded-input focus:ring-2 focus:ring-azul-secundario focus:border-transparent transition-all duration-200"
            placeholder="(11) 99999-9999"
          />
          <div class="error-message hidden text-contabil-erro text-sm mt-1"></div>
        </div>

        <!-- Senhas -->
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
          <div>
            <label for="password" class="block text-sm font-medium text-contabil-azul mb-2">
              Senha *
            </label>
            <input
              type="password"
              id="password"
              name="password"
              required
              minlength="8"
              class="form-input w-full px-4 py-3 border border-gray-300 rounded-input focus:ring-2 focus:ring-azul-secundario focus:border-transparent transition-all duration-200"
              placeholder="Mínimo 8 caracteres"
            />
            <div class="error-message hidden text-contabil-erro text-sm mt-1"></div>
          </div>

          <div>
            <label for="password_confirm" class="block text-sm font-medium text-contabil-azul mb-2">
              Confirmar Senha *
            </label>
            <input
              type="password"
              id="password_confirm"
              name="password_confirm"
              required
              minlength="8"
              class="form-input w-full px-4 py-3 border border-gray-300 rounded-input focus:ring-2 focus:ring-azul-secundario focus:border-transparent transition-all duration-200"
              placeholder="Repita a senha"
            />
            <div class="error-message hidden text-contabil-erro text-sm mt-1"></div>
          </div>
        </div>

        <!-- =============================================================== -->
        <!-- ALERTAS E MENSAGENS -->
        <!-- =============================================================== -->
        <div id="alert-container" class="hidden">
          <div id="alert-success" class="hidden bg-gradient-success border border-contabil-sucesso text-contabil-sucesso px-4 py-3 rounded-input">
            <div class="flex">
              <svg class="w-5 h-5 mr-2 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
              </svg>
              <span id="alert-success-message"></span>
            </div>
          </div>

          <div id="alert-error" class="hidden bg-red-50 border border-contabil-erro text-contabil-erro px-4 py-3 rounded-input">
            <div class="flex">
              <svg class="w-5 h-5 mr-2 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
              </svg>
              <span id="alert-error-message"></span>
            </div>
          </div>
        </div>

        <!-- =============================================================== -->
        <!-- BOTÃO DE CADASTRO -->
        <!-- =============================================================== -->
        <div>
          <button
            type="submit"
            id="btn-cadastro"
            class="w-full bg-gradient-multibpo text-white font-semibold py-3 px-4 rounded-button hover:shadow-button focus:outline-none focus:ring-2 focus:ring-azul-secundario focus:ring-offset-2 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span id="btn-text">Criar Conta MVP</span>
            <span id="btn-loading" class="hidden">
              <svg class="animate-spin h-5 w-5 inline mr-2" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none"/>
                <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"/>
              </svg>
              Criando conta...
            </span>
          </button>
        </div>

        <!-- =============================================================== -->
        <!-- LINK PARA LOGIN -->
        <!-- =============================================================== -->
        <div class="text-center">
          <p class="text-contabil-texto">
            Já tem uma conta? 
            <a 
              href="/login" 
              class="text-contabil-azul hover:text-azul-secundario font-medium transition-colors duration-200"
            >
              Fazer login
            </a>
          </p>
        </div>
      </form>
    </div>
  </div>
</Layout>

<!-- ===================================================================== -->
<!-- SCRIPTS DA PÁGINA -->
<!-- ===================================================================== -->
<script>
  // Importar utilitários (será criado depois)
  import { formatCPF, formatTelefone, validateCPF } from '../utils/formatters.js';
  import { apiClient } from '../utils/api_client.js';

  // =====================================================================
  // FORMATAÇÃO EM TEMPO REAL
  // =====================================================================
  document.addEventListener('DOMContentLoaded', function() {
    const cpfInput = document.getElementById('cpf');
    const telefoneInput = document.getElementById('telefone');

    // Formatação CPF
    cpfInput?.addEventListener('input', function(e) {
      e.target.value = formatCPF(e.target.value);
    });

    // Formatação Telefone
    telefoneInput?.addEventListener('input', function(e) {
      e.target.value = formatTelefone(e.target.value);
    });

    // Validação de senhas em tempo real
    const passwordInput = document.getElementById('password');
    const passwordConfirmInput = document.getElementById('password_confirm');

    passwordConfirmInput?.addEventListener('input', function() {
      const password = passwordInput.value;
      const passwordConfirm = passwordConfirmInput.value;
      
      if (passwordConfirm && password !== passwordConfirm) {
        showFieldError('password_confirm', 'As senhas não coincidem');
      } else {
        hideFieldError('password_confirm');
      }
    });
  });

  // =====================================================================
  // SUBMISSÃO DO FORMULÁRIO
  // =====================================================================
  document.getElementById('form-cadastro')?.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const data = Object.fromEntries(formData.entries());
    
    // Limpar erros anteriores
    clearAllErrors();
    
    // Validações frontend
    if (!validateForm(data)) {
      return;
    }
    
    // Mostrar loading
    setLoading(true);
    
    try {
      // Chamada para API de registro
      const response = await apiClient.post('/register/', data);
      
      if (response.success) {
        // Salvar tokens
        localStorage.setItem('multibpo_access_token', response.tokens.access);
        localStorage.setItem('multibpo_refresh_token', response.tokens.refresh);
        localStorage.setItem('multibpo_user', JSON.stringify(response.user));
        
        // Mostrar sucesso
        showAlert('success', `Conta criada com sucesso! Bem-vindo, ${response.user.nome_completo}!`);
        
        // Redirecionar para dashboard após 2 segundos
        setTimeout(() => {
          window.location.href = '/dashboard';
        }, 2000);
        
      } else {
        showAlert('error', response.message || 'Erro ao criar conta. Tente novamente.');
      }
      
    } catch (error) {
      console.error('Erro no cadastro:', error);
      
      if (error.response?.data?.errors) {
        // Mostrar erros de validação do backend
        Object.entries(error.response.data.errors).forEach(([field, messages]) => {
          showFieldError(field, Array.isArray(messages) ? messages[0] : messages);
        });
      } else {
        showAlert('error', 'Erro interno. Tente novamente em alguns instantes.');
      }
    } finally {
      setLoading(false);
    }
  });

  // =====================================================================
  // FUNÇÕES UTILITÁRIAS
  // =====================================================================
  function validateForm(data) {
    let isValid = true;
    
    // Validar campos obrigatórios
    const requiredFields = ['first_name', 'last_name', 'email', 'password', 'password_confirm', 'cpf'];
    requiredFields.forEach(field => {
      if (!data[field]?.trim()) {
        showFieldError(field, 'Este campo é obrigatório');
        isValid = false;
      }
    });
    
    // Validar CPF
    if (data.cpf && !validateCPF(data.cpf)) {
      showFieldError('cpf', 'CPF inválido');
      isValid = false;
    }
    
    // Validar senhas
    if (data.password !== data.password_confirm) {
      showFieldError('password_confirm', 'As senhas não coincidem');
      isValid = false;
    }
    
    if (data.password && data.password.length < 8) {
      showFieldError('password', 'A senha deve ter pelo menos 8 caracteres');
      isValid = false;
    }
    
    return isValid;
  }

  function showFieldError(fieldName, message) {
    const field = document.getElementById(fieldName);
    const errorDiv = field?.parentElement.querySelector('.error-message');
    
    if (field && errorDiv) {
      field.classList.add('border-contabil-erro', 'focus:ring-red-500');
      field.classList.remove('border-gray-300');
      errorDiv.textContent = message;
      errorDiv.classList.remove('hidden');
    }
  }

  function hideFieldError(fieldName) {
    const field = document.getElementById(fieldName);
    const errorDiv = field?.parentElement.querySelector('.error-message');
    
    if (field && errorDiv) {
      field.classList.remove('border-contabil-erro', 'focus:ring-red-500');
      field.classList.add('border-gray-300');
      errorDiv.classList.add('hidden');
    }
  }

  function clearAllErrors() {
    document.querySelectorAll('.error-message').forEach(el => {
      el.classList.add('hidden');
    });
    
    document.querySelectorAll('input').forEach(input => {
      input.classList.remove('border-contabil-erro', 'focus:ring-red-500');
      input.classList.add('border-gray-300');
    });
  }

  function showAlert(type, message) {
    const container = document.getElementById('alert-container');
    const successAlert = document.getElementById('alert-success');
    const errorAlert = document.getElementById('alert-error');
    
    // Esconder todos os alertas
    successAlert.classList.add('hidden');
    errorAlert.classList.add('hidden');
    
    // Mostrar alerta correto
    if (type === 'success') {
      document.getElementById('alert-success-message').textContent = message;
      successAlert.classList.remove('hidden');
    } else {
      document.getElementById('alert-error-message').textContent = message;
      errorAlert.classList.remove('hidden');
    }
    
    container.classList.remove('hidden');
    
    // Auto-esconder após 5 segundos (exceto sucesso)
    if (type !== 'success') {
      setTimeout(() => {
        container.classList.add('hidden');
      }, 5000);
    }
  }

  function setLoading(loading) {
    const btn = document.getElementById('btn-cadastro');
    const btnText = document.getElementById('btn-text');
    const btnLoading = document.getElementById('btn-loading');
    
    if (loading) {
      btn.disabled = true;
      btnText.classList.add('hidden');
      btnLoading.classList.remove('hidden');
    } else {
      btn.disabled = false;
      btnText.classList.remove('hidden');
      btnLoading.classList.add('hidden');
    }
  }
</script>

<!-- ===================================================================== -->
<!-- FUNCIONALIDADES DA PÁGINA:

1. FORMULÁRIO COMPLETO:
   - 5 campos obrigatórios + telefone opcional
   - Validações frontend e backend
   - Formatação automática CPF/telefone

2. VALIDAÇÕES EM TEMPO REAL:
   - CPF format + validação
   - Senhas coincidem
   - Campos obrigatórios

3. INTEGRAÇÃO BACKEND:
   - POST /api/v1/mvp/register/
   - Salvamento de tokens JWT
   - Redirecionamento automático

4. UX OTIMIZADA:
   - Loading states
   - Alertas de sucesso/erro
   - Animações suaves
   - Design responsivo

5. SEGURANÇA:
   - Validações duplas (frontend + backend)
   - Sanitização de inputs
   - Token storage seguro
===================================================================== -->